<Window x:Class="Belet.Views.PreviousMainFilmPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxmvvm1="clr-namespace:DevExpress.Mvvm.UI;assembly=DevExpress.Xpf.Core.v21.1"
             xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:dxwuin="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/navigation"
             xmlns:ViewModels="clr-namespace:Belet.ViewModels" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:MainFilmPage="clr-namespace:Belet.ViewModels"
            WindowStartupLocation="CenterScreen" MouseLeftButtonDown="WindowMouseLeftButtonDown"
        
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
      
        x:Name="Window"
        xmlns:converters="clr-namespace:Belet.Helper"
          TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{x:Null}"  
           xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResize"
        xmlns:local="clr-namespace:Belet.Views"
        mc:Ignorable="d"
        Title="PreviousMainFilmPage"
        Height="500"
        Width="1000">

    <Window.DataContext>
        <ViewModels:MainFilmPage/>
    </Window.DataContext>

    <x:Code>
        <![CDATA[            
        private void WindowMouseLeftButtonDown(object sender, MouseButtonEventArgs e)
        {
            DragMove();
        }
    ]]>
    </x:Code>




    <Window.Resources>

        <converters:dk_MultiBindingConverter x:Key="MultiBindingConverter" />

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="MinHeight" Value="27"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>


    <Grid x:Name="FirstGrid"  Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/> 
            <RowDefinition/>
        </Grid.RowDefinitions>

        <materialDesign:PopupBox Grid.Row="0" HorizontalAlignment="Right" Margin="0 10 20 10" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False" Height="25"  >

            <StackPanel>

                <Button Command="{Binding goldawmerkezi}" ToolTip="Having Trouble Loggin In?" Margin="0 8 0 0" Content="Help me"/>
                <Button   ToolTip="Close Application" Content="Exit Application" Command="{Binding close_application}"/>
                <Button    Content="Minimize" Command="{Binding cmdLogin}"/>
                <Button    Content="{Binding  previousMediaModel.IsBigOrNormal}" Command="{Binding sizechangebtn}"/>
                <Button ToolTip="Present" Content="Present" Command="{Binding presentBtn}"/>
                <Button   ToolTip="Log out" x:Name="LogOutBtn" Content="Log out" Command="{Binding LogOutBtn}"/>


            </StackPanel>
        </materialDesign:PopupBox>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
            <StackPanel>
                <!--<Border  Height="600" Width="auto" Grid.Row="1">
                    --><!--<Border.Background >
                        <ImageBrush  Stretch="UniformToFill" ImageSource="{Binding previousMediaModel.brush1}"/>
                    </Border.Background>--><!--

                    <StackPanel Margin="30 200 0 0">
                        <TextBlock Text="{Binding previousMediaModel.brush2}" FontSize="37" Width="500" TextWrapping="Wrap" HorizontalAlignment="Left" FontWeight="Medium" Foreground="#eeeeef"/>

                        <StackPanel  Margin="0 30 0 0" Orientation="Horizontal">

                            <Button Content="Воспроизвести" FontSize="15" FontWeight="Medium" Margin="0 0 10 0"  HorizontalAlignment="Left"  Width="190" Height="50"  Background="{StaticResource MaterialDesignLightBackground}" >

                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">

                                        <Setter Property="Background" Value="Green"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseCaptured" Value="True">
                                                <Setter Property="Background" Value="DarkGoldenrod"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="8"/>
                                    </Style>
                                </Button.Resources>
                            </Button>

                            <Button  Content="Подробнее" FontSize="15" FontWeight="Medium" Margin="0 0 30 0"  HorizontalAlignment="Left"  Width="190" Height="50"   Background="{StaticResource MaterialDesignLightBackground}" >

                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">

                                        <Setter Property="Background" Value="Green"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseCaptured" Value="True">
                                                <Setter Property="Background" Value="DarkGoldenrod"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="8"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>-->
                <StackPanel Margin="30 0">
                    <TextBlock Margin="0 0 0 10" Text="Halanlarym" FontSize="20" FontWeight="Medium"/>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                        <WrapPanel x:Name="LikeWrapanel" Width="1000" >

                        </WrapPanel>
                    </ScrollViewer>
                    
                    <TextBlock Margin="0 0 0 10" Text="Halas edilen" FontSize="20" FontWeight="Medium"/>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                    <WrapPanel x:Name="SaveWrapanel" Width="1000" >

                    </WrapPanel>
                    </ScrollViewer>
                    
                    <TextBlock Margin="0 0 0 10" Text="Taze Chykan" FontSize="20" FontWeight="Medium"/>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                        <WrapPanel x:Name="NewWrapanel" Width="auto" >

                        </WrapPanel>
                    </ScrollViewer>
                    
                    <TextBlock Margin="0 0 0 10" Text="Taze Gosulan" FontSize="20" FontWeight="Medium"/>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                        <WrapPanel x:Name="NewAddedWrapanel" Width="1000" >

                        </WrapPanel>
                    </ScrollViewer>
                    
                </StackPanel>
            </StackPanel>
            
            
        </ScrollViewer>

        <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="Loaded"   Command="{Binding InitializeCommand}">
                <dxmvvm:EventToCommand.CommandParameter>
                    <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                        <Binding ElementName="Window"/>
                        <Binding ElementName="LikeWrapanel"/>
                        <Binding ElementName="SaveWrapanel"/>
                        <Binding ElementName="NewWrapanel"/>
                        <Binding ElementName="NewAddedWrapanel"/>
                        <Binding ElementName="LogOutBtn"/>
                    </MultiBinding>
                </dxmvvm:EventToCommand.CommandParameter>
            </dxmvvm:EventToCommand>


            <dxmvvm:EventToCommand EventName="SizeChanged"   Command="{Binding SizeChangedEvent}">
                <dxmvvm:EventToCommand.CommandParameter>
                    <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                        <Binding ElementName="Window"/>
                        <Binding ElementName="LikeWrapanel"/>
                        <Binding ElementName="SaveWrapanel"/>
                        <Binding ElementName="NewWrapanel"/>
                        <Binding ElementName="NewAddedWrapanel"/>
                    </MultiBinding>
                </dxmvvm:EventToCommand.CommandParameter>
            </dxmvvm:EventToCommand>

        </dxmvvm:Interaction.Behaviors>



    </Grid>
</Window>
